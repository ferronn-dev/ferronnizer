<Ui>
  <Frame name='FerronnizerTemplateAura' virtual='true'>
    <Size x='20' y='20' />
    <Layers>
      <Layer level='ARTWORK'>
        <Texture parentKey='Icon' setAllPoints='true'>
          <TexCoords top='0.07' left='0.07' bottom='0.93' right='0.93' />
        </Texture>
        <FontString parentKey='Count' inherits='NumberFontNormalSmall'>
          <Anchors>
            <Anchor point='BOTTOMRIGHT' />
          </Anchors>
        </FontString>
      </Layer>
      <Layer level='OVERLAY'>
        <!-- Taken from BuffFrame.xml -->
        <Texture parentKey='Border' file='Interface\Buttons\UI-Debuff-Overlays' setAllPoints='true'>
          <TexCoords left='0.296875' right='0.5703125' top='0' bottom='0.515625' />
        </Texture>
      </Layer>
    </Layers>
    <Frames>
      <Cooldown parentKey='Cooldown' inherits='CooldownFrameTemplate' reverse='true' />
    </Frames>
    <Scripts>
      <OnEnter>
        local unit = self:GetParent():GetParent().unit
        GameTooltip:SetOwner(self, 'ANCHOR_BOTTOMRIGHT')
        GameTooltip:SetUnitAura(unit, self.Index, self.Filter)
        GameTooltip:Show()
      </OnEnter>
      <OnLeave>
        GameTooltip:Hide()
      </OnLeave>
    </Scripts>
  </Frame>
  <Button name='FerronnizerTemplateUnitButton' inherits='SecureUnitButtonTemplate' virtual='true'>
    <Size x='160' y='160' />
    <Scripts>
      <OnLoad>
        for event in self.events:gmatch('([^,]+)') do
          self.Name:RegisterEvent(event)
          self.Health:RegisterEvent(event)
          self.Power:RegisterEvent(event)
          self.Auras:RegisterEvent(event)
        end
        self:SetAttribute('unit', self.unit)
        RegisterUnitWatch(self)
      </OnLoad>
      <OnEnter>
        local unit = self.unit
        GameTooltip:SetOwner(self, 'ANCHOR_TOP')
        GameTooltip:SetUnit(unit)
        if UnitIsUnit(unit, 'player') then
          GameTooltip:AddLine(('XP: %d/%d'):format(UnitXP(unit), UnitXPMax(unit)))
          GameTooltip:AddLine(('Rest: %s'):format(tostring(GetXPExhaustion() or 'none')))
        end
        GameTooltip:Show()
      </OnEnter>
      <OnLeave>
        GameTooltip:Hide()
      </OnLeave>
    </Scripts>
    <Frames>
      <Frame parentKey='Name'>
        <Anchors>
          <Anchor point='TOPLEFT' />
        </Anchors>
        <Size x='160' y='20' />
        <Layers>
          <Layer>
            <Texture parentKey='Background' setAllPoints='true'>
              <Color r='0.4' g='0' b='0' />
            </Texture>
            <FontString parentKey='Text' inherits='GameFontNormalSmall' justifyH='CENTER' setAllPoints='true' />
          </Layer>
        </Layers>
        <Scripts>
          <OnLoad>
            local unit = self:GetParent().unit
            self:RegisterEvent('PLAYER_LEVEL_UP')
            self:RegisterUnitEvent('UNIT_NAME_UPDATE', unit)
          </OnLoad>
          <OnEvent>
            local unit = self:GetParent().unit
            if not UnitExists(unit) then
              self.Text:SetText('')
            else
              local arg = ...
              local level = event == 'PLAYER_LEVEL_UP' and arg or UnitLevel(unit)
              self.Text:SetText(level .. ' - ' .. UnitName(unit))
            end
          </OnEvent>
        </Scripts>
      </Frame>
      <StatusBar parentKey='Health'>
        <Anchors>
          <Anchor point='TOPLEFT' x='0' y='-20' />
        </Anchors>
        <Size x='160' y='20' />
        <BarTexture file='Interface\Buttons\WHITE8x8' />
        <BarColor r='0.0' g='0.5' b='0' />
        <Layers>
          <Layer>
            <Texture parentKey='Background' setAllPoints='true'>
              <Color a='0.5' />
            </Texture>
            <FontString parentKey='Text' inherits='GameNormalNumberFont' justifyH='CENTER' setAllPoints='true' />
          </Layer>
        </Layers>
        <Scripts>
          <OnLoad>
            local unit = self:GetParent().unit
            self:RegisterUnitEvent('UNIT_HEALTH', unit)
            self:RegisterUnitEvent('UNIT_MAXHEALTH', unit)
          </OnLoad>
          <OnEvent>
            local unit = self:GetParent().unit
            local value, max = UnitHealth(unit), UnitHealthMax(unit)
            self:SetMinMaxValues(0, max)
            self:SetValue(value)
            self.Text:SetText(value .. ' / ' .. max)
          </OnEvent>
        </Scripts>
      </StatusBar>
      <StatusBar parentKey='Power'>
        <Anchors>
          <Anchor point='TOPLEFT' x='0' y='-40' />
        </Anchors>
        <Size x='160' y='20' />
        <BarTexture file='Interface\Buttons\WHITE8x8' />
        <Layers>
          <Layer>
            <Texture parentKey='Background' setAllPoints='true'>
              <Color a='0.5' />
            </Texture>
            <FontString parentKey='Text' inherits='GameNormalNumberFont' justifyH='CENTER' setAllPoints='true' />
          </Layer>
        </Layers>
        <Scripts>
          <OnLoad>
            local unit = self:GetParent().unit
            self:RegisterUnitEvent('UNIT_POWER_UPDATE', unit)
          </OnLoad>
          <OnEvent>
            local unit = self:GetParent().unit
            local color = PowerBarColor[select(2, UnitPowerType(unit)) or 'MANA']
            self:SetStatusBarColor(color.r, color.g, color.b)
            local value, max = UnitPower(unit), UnitPowerMax(unit)
            self:SetMinMaxValues(0, max)
            self:SetValue(value)
            self.Text:SetText(value .. ' / ' .. max)
          </OnEvent>
        </Scripts>
      </StatusBar>
      <Frame parentKey='Auras'>
        <Anchors>
          <Anchor point='TOPLEFT' x='0' y='-60' />
        </Anchors>
        <Size x='160' y='100' />
        <Scripts>
          <OnLoad>
            self:RegisterUnitEvent('UNIT_AURA', self:GetParent().unit)
            self.Kids = {}
            for row = 0, 4 do
              for col = 0, 7 do
                local frame = CreateFrame('Frame', nil, self, 'FerronnizerTemplateAura', row * 8 + col + 1)
                frame:SetPoint('TOPLEFT', col * 20, row * 20)
                table.insert(self.Kids, frame)
              end
            end
          </OnLoad>
          <OnEvent>
            local unit = self:GetParent().unit
            local index, filter = 1, 'HELPFUL'
            for _, frame in ipairs(self.Kids) do
              local _, icon, count, dispelType, duration, expiration = UnitAura(unit, index, filter)
              if not icon and filter == 'HELPFUL' then
                index, filter = 1, 'HARMFUL'
                _, icon, count, dispelType, duration, expiration = UnitAura(unit, index, filter)
              end
              if not icon then
                frame.Index, frame.Filter = nil, nil
                frame:Hide()
              else
                frame.Index, frame.Filter = index, filter
                frame:Show()
                frame.Icon:SetTexture(icon)
                frame.Count:SetText(count and count > 0 and count or '')
                if dispelType then
                  local color = DebuffTypeColor[dispelType]
                  frame.Border:SetVertexColor(color.r, color.g, color.b)
                  frame.Border:Show()
                else
                  frame.Border:Hide()
                end
                frame.Cooldown:SetCooldown(expiration - duration, duration)
              end
              index = index + 1
            end
          </OnEvent>
        </Scripts>
      </Frame>
    </Frames>
  </Button>
  <Frame name='FerronnizerRoot' parent='UIParent' setAllPoints='true'>
    <Frames>
      <Button parentKey='Player' inherits='FerronnizerTemplateUnitButton'>
        <Anchors>
          <Anchor point='CENTER' x='-200' y='-140' />
        </Anchors>
        <KeyValues>
          <KeyValue key='events' value='PLAYER_LOGIN' />
          <KeyValue key='unit' value='player' />
        </KeyValues>
      </Button>
      <Button parentKey='Pet' inherits='FerronnizerTemplateUnitButton' scale='0.5'>
        <Anchors>
          <Anchor point='TOPRIGHT' relativeKey='$parent.Player' relativePoint='TOPLEFT' x='-20' />
        </Anchors>
        <KeyValues>
          <KeyValue key='events' value='PLAYER_LOGIN' />
          <KeyValue key='unit' value='pet' />
        </KeyValues>
        <Frames>
          <!-- Adapted from PetFrame.lua -->
          <Frame parentKey='Happiness'>
            <Anchors>
              <Anchor point='TOPRIGHT' relativePoint='TOPLEFT' x='-10' />
            </Anchors>
            <Size x='24' y='23' />
            <Layers>
              <Layer>
                <Texture parentKey='Texture' file='Interface\PetPaperDollFrame\UI-PetHappiness' setAllPoints='true' />
              </Layer>
            </Layers>
            <Scripts>
              <OnLoad>
                self:RegisterUnitEvent('UNIT_HAPPINESS', 'pet')
              </OnLoad>
              <OnEvent>
                local happiness = GetPetHappiness()
                self.Texture:SetTexCoord((function()
                  if happiness == 1 then
                    return 0.375, 0.5625, 0, 0.359375
                  elseif happiness == 2 then
                    return 0.1875, 0.375, 0, 0.359375
                  else
                    return 0, 0.1875, 0, 0.359375
                  end
                end)())
              </OnEvent>
            </Scripts>
          </Frame>
        </Frames>
      </Button>
      <Button parentKey='Party1' inherits='FerronnizerTemplateUnitButton' scale='0.5'>
        <Anchors>
          <Anchor point='BOTTOMLEFT' relativeKey='$parent.Player' relativePoint='TOPLEFT' y='50' />
        </Anchors>
        <KeyValues>
          <KeyValue key='events' value='PLAYER_LOGIN' />
          <KeyValue key='unit' value='party1' />
        </KeyValues>
      </Button>
      <Button parentKey='Target' inherits='FerronnizerTemplateUnitButton'>
        <Anchors>
          <Anchor point='CENTER' x='200' y='-140' />
        </Anchors>
        <KeyValues>
          <KeyValue key='events' value='PLAYER_LOGIN,PLAYER_TARGET_CHANGED' />
          <KeyValue key='unit' value='target' />
        </KeyValues>
      </Button>
      <Frame parentKey='Hidden' hidden='true'>
        <Scripts>
          <OnLoad>
            BuffFrame:SetParent(self)
            PlayerFrame:SetParent(self)
            TargetFrame:SetParent(self)
            TemporaryEnchantFrame:SetParent(self)
          </OnLoad>
        </Scripts>
      </Frame>
    </Frames>
  </Frame>
</Ui>
